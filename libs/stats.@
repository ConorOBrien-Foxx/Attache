?? statistics library

ClassNamed[StemDisplay, Displayment]! {
    value .= StemLeafPlot@@__
    max_size .= Max[Size@S@First => value]
    plot .= value :>
        Join&"|"
        @ Over[
            0 -> PadLeft&max_size@S,
            1 -> Join&sp
        ]

    plot .= Join[plot, lf]
    repr .= {
        plot
    }
}

StemLeafPlot := [data, units] -> {
    units ..= 1
    groups .= Group[Floor@`/&units, data]
    {
        [Floor[_1 * units / 10], _2 % 10]
    } &> SortBy[First, List[groups]]
}

Interpolate[left, right, index, mode] := Switch[mode,
    $lower -> left,
    $higher -> right,
    $nearest -> If[index < 0.5, left, right],
    $midpoint -> (left + right) / 2,
    $linear -> (left + (right - left) * index)
]

Percentile := Configurable[[p, list] -> {
    mode .= GetOption[$interp, $linear]
    ind .= p / 100.0 * (#list - 1)
    l'r .= Sort[list][CallEach[Floor'Ceiling, ind]]
    Interpolate[l, r, ind % 1, mode]
}]

FiveNumber := CallEach[
    [
        Min,
        25&Percentile,
        Median,
        75&Percentile,
        Max
    ]
]

?? uses horner's method
ErfCoefs := [1.00002368, 0.37409196, 0.09678418, -0.18628806, 0.27886807, -1.13520398, 1.48851587, -0.82215223, 0.17087277]
Erf[z] := (
    t .= 1 / (1 + 0.5 * Abs[z]);;
    ans .= 1 - t * Exp[-z*z - 1.26551223 + t * FoldRight[${y + t * x}, ErfCoefs]];;
    Sign[z] * ans
)

ClassNamed[NormalDistribution] {
    mean .= _1
    dev .= _2
    
    $add[other] .= NormalDistribution[mean + other.mean, Sqrt[dev^2 + other.dev^2]]
    $sub[other] .= NormalDistribution[mean - other.mean, Sqrt[dev^2 + other.dev^2]]

    $string[] .= $"N(${mean}, ${dev})"
    
    ?? normalCdf(x) = 1/2 + 1/2 * erf(x / sqrt(2))
    CDF[x] .= 0.5 + 0.5 * Erf[x / Sqrt[2]]
    
    P[lower, upper] .= CDF[upper] - CDF[lower]
}

ND := NormalDistribution
SND := ND[1, 0]

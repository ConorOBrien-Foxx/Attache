Midpoint := Mean => Tr@Map[List]@V

ClassNamed[Circle] {
    arity .= #__
    If[arity = 3,
        center .= Point[_1, _2];;
        r .= _3
    ]
    If[arity = 2,
        center .= Point[..._1];;
        r .= _2
    ]
    ClearLocal[$arity]

    contains[point] .= Distance[point, $.center] <= $.r

}

CircleEnclosing := [points] -> {
    candidates .= Combinations[points, 2]
    circles .= candidates :> {
        c .= Midpoint@@_
        r .= Distance@@_ / 2
        Circle[c, r]
    }
    Find[All&points@.contains, circles]
}

?? rudimentary repl program
Needs[$visuals, $error]

??REPL := Safely[ReadLineLoop<~"A> ", Display@First@Save@EvalHere~>, redo->true]

ClassNamed[Entry] {
    input .= _1
    output .= _2

    $map[f] .= Entry[f[$.input], f[$.output]]
    $equal[other] .= All[[$.input, $.output] = [other.input, other.output]]
}

history := []
head := "A> "
REPL := {
    Safely[ReadLineLoop<~head, {
        line .= Chomp <| _
        ?? go to line, reset prompt
        Print["\e[1A" + head, after->""]
        Print[Highlight[line]]
        res .= EvalHere[line, .output => history]
        next .= Entry[line, res]
        If[#history = 0 or Last[history].input =/= next.input,
            Unshift[history, Entry[line, res]]
        ]
        Display[res]
    }~>, {
        If[_ is_an AttacheError,
            Print[_.readable],
            If[String[_] /= "exit",
                Print["\e[31mInternal error: \e[1m" + String[_] + "\e[0m"];;
                Print => If[#_.backtrace >= 10,
                    _.backtrace[0:10] ' $"(...${#_.backtrace - 10} more items omitted)",
                    _.backtrace
                ]
            ]
        ]
    }, redo->true][]
}
